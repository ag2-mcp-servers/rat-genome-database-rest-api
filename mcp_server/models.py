# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T04:57:44+00:00

from __future__ import annotations

from datetime import datetime
from typing import Any, Dict, List, Optional

from pydantic import BaseModel, RootModel


class AnnotatedGeneRequest(BaseModel):
    accId: Optional[str] = None
    evidenceCodes: Optional[List[str]] = None
    speciesTypeKeys: Optional[List[int]] = None


class Annotation(BaseModel):
    annotatedObjectRgdId: Optional[int] = None
    annotationExtension: Optional[str] = None
    aspect: Optional[str] = None
    createdBy: Optional[int] = None
    createdDate: Optional[datetime] = None
    dataSrc: Optional[str] = None
    evidence: Optional[str] = None
    geneProductFormId: Optional[str] = None
    key: Optional[int] = None
    lastModifiedBy: Optional[int] = None
    lastModifiedDate: Optional[datetime] = None
    notes: Optional[str] = None
    objectName: Optional[str] = None
    objectSymbol: Optional[str] = None
    originalCreatedDate: Optional[datetime] = None
    qualifier: Optional[str] = None
    refRgdId: Optional[int] = None
    relativeTo: Optional[str] = None
    rgdObjectKey: Optional[int] = None
    speciesTypeKey: Optional[int] = None
    term: Optional[str] = None
    termAcc: Optional[str] = None
    withInfo: Optional[str] = None
    xrefSource: Optional[str] = None


class AnnotationRequest(BaseModel):
    evidenceCodes: Optional[List[str]] = None
    ids: Optional[List[str]] = None
    speciesTypeKeys: Optional[List[int]] = None
    termAcc: Optional[str] = None


class Chromosome(BaseModel):
    chromosome: Optional[str] = None
    contigCount: Optional[int] = None
    gapCount: Optional[int] = None
    gapLength: Optional[int] = None
    genbankId: Optional[str] = None
    mapKey: Optional[int] = None
    ordinalNumber: Optional[int] = None
    refseqId: Optional[str] = None
    seqLength: Optional[int] = None


class EnrichmentGeneRequest(BaseModel):
    accId: Optional[str] = None
    geneSymbols: Optional[List[str]] = None
    species: Optional[str] = None


class EnrichmentRequest(BaseModel):
    aspect: Optional[str] = None
    genes: Optional[List[str]] = None
    species: Optional[str] = None


class Gene(BaseModel):
    agrDescription: Optional[str] = None
    description: Optional[str] = None
    ensemblFullName: Optional[str] = None
    ensemblGeneSymbol: Optional[str] = None
    ensemblGeneType: Optional[str] = None
    geneSource: Optional[str] = None
    key: Optional[int] = None
    mergedDescription: Optional[str] = None
    name: Optional[str] = None
    ncbiAnnotStatus: Optional[str] = None
    nomenReviewDate: Optional[datetime] = None
    nomenSource: Optional[str] = None
    notes: Optional[str] = None
    refSeqStatus: Optional[str] = None
    rgdId: Optional[int] = None
    soAccId: Optional[str] = None
    speciesTypeKey: Optional[int] = None
    symbol: Optional[str] = None
    type: Optional[str] = None
    variant: Optional[bool] = None


class Map(BaseModel):
    dbsnpVersion: Optional[str] = None
    description: Optional[str] = None
    key: Optional[int] = None
    methodKey: Optional[int] = None
    name: Optional[str] = None
    notes: Optional[str] = None
    primaryRefAssembly: Optional[bool] = None
    rank: Optional[int] = None
    refSeqAssemblyAcc: Optional[str] = None
    refSeqAssemblyName: Optional[str] = None
    rgdId: Optional[int] = None
    source: Optional[str] = None
    speciesTypeKey: Optional[int] = None
    ucscAssemblyId: Optional[str] = None
    unit: Optional[str] = None
    version: Optional[str] = None


class MapPair(BaseModel):
    keyValue: Optional[str] = None
    stringValue: Optional[str] = None


class MappedGene(BaseModel):
    chromosome: Optional[str] = None
    gene: Optional[Gene] = None
    mapKey: Optional[int] = None
    start: Optional[int] = None
    stop: Optional[int] = None
    strand: Optional[str] = None


class MappedGenePosition(BaseModel):
    chromosome: Optional[str] = None
    mapKey: Optional[int] = None
    rgdId: Optional[int] = None
    start: Optional[int] = None
    stop: Optional[int] = None
    strand: Optional[str] = None
    symbol: Optional[str] = None


class OrthologRequest(BaseModel):
    rgdIds: Optional[List[int]] = None
    speciesTypeKeys: Optional[List[int]] = None


class PathwayObject(BaseModel):
    accId: Optional[str] = None
    id: Optional[str] = None
    objDesc: Optional[str] = None
    objName: Optional[str] = None
    typeId: Optional[int] = None
    typeName: Optional[str] = None
    url: Optional[str] = None
    xdb_key: Optional[int] = None


class QTL(BaseModel):
    chromosome: Optional[str] = None
    flank1RgdId: Optional[int] = None
    flank2RgdId: Optional[int] = None
    inheritanceType: Optional[str] = None
    key: Optional[int] = None
    linkageImage: Optional[str] = None
    lod: Optional[float] = None
    lodImage: Optional[str] = None
    mostSignificantCmoTerm: Optional[str] = None
    name: Optional[str] = None
    notes: Optional[str] = None
    peakOffset: Optional[int] = None
    peakRgdId: Optional[int] = None
    pvalue: Optional[float] = None
    rgdId: Optional[int] = None
    sourceUrl: Optional[str] = None
    speciesTypeKey: Optional[int] = None
    symbol: Optional[str] = None
    variance: Optional[float] = None


class RGDIDListRequest(BaseModel):
    rgdIds: Optional[List[int]] = None


class Reference(BaseModel):
    citation: Optional[str] = None
    doi: Optional[str] = None
    editors: Optional[str] = None
    issue: Optional[str] = None
    key: Optional[int] = None
    notes: Optional[str] = None
    pages: Optional[str] = None
    pubDate: Optional[datetime] = None
    pubStatus: Optional[str] = None
    publication: Optional[str] = None
    publisher: Optional[str] = None
    publisherCity: Optional[str] = None
    refAbstract: Optional[str] = None
    referenceType: Optional[str] = None
    rgdId: Optional[int] = None
    speciesTypeKey: Optional[int] = None
    title: Optional[str] = None
    urlWebReference: Optional[str] = None
    volume: Optional[str] = None


class SSLP(BaseModel):
    expectedSize: Optional[int] = None
    forwardSeq: Optional[str] = None
    key: Optional[int] = None
    name: Optional[str] = None
    notes: Optional[str] = None
    reverseSeq: Optional[str] = None
    rgdId: Optional[int] = None
    speciesTypeKey: Optional[int] = None
    sslpType: Optional[str] = None
    templateSeq: Optional[str] = None


class Status(BaseModel):
    cryopreservedEmbryo: Optional[bool] = None
    cryopreservedSperm: Optional[bool] = None
    cryorecovery: Optional[bool] = None
    key: Optional[int] = None
    liveAnimals: Optional[bool] = None
    statusDate: Optional[datetime] = None
    strainRgdId: Optional[int] = None


class Strain(BaseModel):
    backgroundStrainRgdId: Optional[int] = None
    chrAltered: Optional[str] = None
    color: Optional[str] = None
    geneticStatus: Optional[str] = None
    genetics: Optional[str] = None
    imageUrl: Optional[str] = None
    inbredGen: Optional[str] = None
    key: Optional[int] = None
    lastStatus: Optional[str] = None
    lastStatusObject: Optional[Status] = None
    modificationMethod: Optional[str] = None
    name: Optional[str] = None
    notes: Optional[str] = None
    origin: Optional[str] = None
    researchUse: Optional[str] = None
    rgdId: Optional[int] = None
    source: Optional[str] = None
    speciesTypeKey: Optional[int] = None
    statusLog: Optional[List[Status]] = None
    strain: Optional[str] = None
    strainTypeName: Optional[str] = None
    substrain: Optional[str] = None
    symbol: Optional[str] = None


class TermXRef(BaseModel):
    key: Optional[int] = None
    termAcc: Optional[str] = None
    xrefDescription: Optional[str] = None
    xrefValue: Optional[str] = None


class AgrAffectedGenomicModelsTaxonIdGetResponse(
    RootModel[Optional[Dict[str, Dict[str, Any]]]]
):
    root: Optional[Dict[str, Dict[str, Any]]] = None


class AgrAllelesTaxonIdGetResponse(RootModel[Optional[Dict[str, Dict[str, Any]]]]):
    root: Optional[Dict[str, Dict[str, Any]]] = None


class AgrExpressionTaxonIdGetResponse(RootModel[Optional[Dict[str, Dict[str, Any]]]]):
    root: Optional[Dict[str, Dict[str, Any]]] = None


class AgrPhenotypesTaxonIdGetResponse(RootModel[Optional[Dict[str, Dict[str, Any]]]]):
    root: Optional[Dict[str, Dict[str, Any]]] = None


class AgrVariantsTaxonIdGetResponse(RootModel[Optional[Dict[str, Dict[str, Any]]]]):
    root: Optional[Dict[str, Dict[str, Any]]] = None


class AgrTaxonIdGetResponse(RootModel[Optional[Dict[str, Dict[str, Any]]]]):
    root: Optional[Dict[str, Dict[str, Any]]] = None


class AnnotationsPostResponse(RootModel[List[Annotation]]):
    root: List[Annotation]


class AnnotationsAccIdRgdIdGetResponse(RootModel[List[MapPair]]):
    root: List[MapPair]


class AnnotationsReferenceRefRgdIdGetResponse(RootModel[List[Annotation]]):
    root: List[Annotation]


class AnnotationsRgdIdRgdIdGetResponse(RootModel[List[Annotation]]):
    root: List[Annotation]


class AnnotationsRgdIdRgdIdOntologyPrefixGetResponse(RootModel[List[Annotation]]):
    root: List[Annotation]


class AnnotationsAccIdRgdIdGetResponse1(RootModel[List[Annotation]]):
    root: List[Annotation]


class AnnotationsAccIdSpeciesTypeKeyIncludeChildrenGetResponse(
    RootModel[List[Annotation]]
):
    root: List[Annotation]


class EnrichmentAnnotatedGenesPostResponse(BaseModel):
    pass


class EnrichmentDataPostResponse(BaseModel):
    pass


class GenesAffyIdAffyIdSpeciesTypeKeyGetResponse(RootModel[List[Gene]]):
    root: List[Gene]


class GenesAliasAliasSymbolSpeciesTypeKeyGetResponse(RootModel[List[Gene]]):
    root: List[Gene]


class GenesAlleleRgdIdGetResponse(RootModel[List[Gene]]):
    root: List[Gene]


class GenesAnnotationPostResponse(RootModel[List[Gene]]):
    root: List[Gene]


class GenesAnnotationAccIdGetResponse(RootModel[List[Gene]]):
    root: List[Gene]


class GenesAnnotationAccIdSpeciesTypeKeyGetResponse(RootModel[List[Gene]]):
    root: List[Gene]


class GenesKeywordKeywordSpeciesTypeKeyGetResponse(RootModel[List[Gene]]):
    root: List[Gene]


class GenesMapMapKeyGetResponse(RootModel[List[MappedGene]]):
    root: List[MappedGene]


class GenesMappedChrStartStopMapKeyGetResponse(RootModel[List[MappedGene]]):
    root: List[MappedGene]


class GenesOrthologsPostResponse(RootModel[Optional[Dict[str, List[Gene]]]]):
    root: Optional[Dict[str, List[Gene]]] = None


class GenesOrthologsRgdIdGetResponse(RootModel[List[Gene]]):
    root: List[Gene]


class GenesRegionChrStartStopMapKeyGetResponse(RootModel[List[MappedGenePosition]]):
    root: List[MappedGenePosition]


class GenesSpeciesSpeciesTypeKeyGetResponse(RootModel[List[Gene]]):
    root: List[Gene]


class GenesChrStartStopMapKeyGetResponse(RootModel[List[Gene]]):
    root: List[Gene]


class LookupGeneTypesGetResponse(RootModel[List[str]]):
    root: List[str]


class LookupIdMapEnsemblGenePostResponse(RootModel[Optional[Dict[str, str]]]):
    root: Optional[Dict[str, str]] = None


class LookupIdMapEnsemblGeneRgdIdGetResponse(RootModel[Optional[Dict[str, str]]]):
    root: Optional[Dict[str, str]] = None


class LookupIdMapEnsemblProteinPostResponse(RootModel[Optional[Dict[str, str]]]):
    root: Optional[Dict[str, str]] = None


class LookupIdMapEnsemblProteinRgdIdGetResponse(RootModel[Optional[Dict[str, str]]]):
    root: Optional[Dict[str, str]] = None


class LookupIdMapEnsemblTranscriptPostResponse(RootModel[Optional[Dict[str, str]]]):
    root: Optional[Dict[str, str]] = None


class LookupIdMapEnsemblTranscriptRgdIdGetResponse(RootModel[Optional[Dict[str, str]]]):
    root: Optional[Dict[str, str]] = None


class LookupIdMapGTExPostResponse(RootModel[Optional[Dict[str, str]]]):
    root: Optional[Dict[str, str]] = None


class LookupIdMapGTExRgdIdGetResponse(RootModel[Optional[Dict[str, str]]]):
    root: Optional[Dict[str, str]] = None


class LookupIdMapGenBankNucleotidePostResponse(RootModel[Optional[Dict[str, str]]]):
    root: Optional[Dict[str, str]] = None


class LookupIdMapGenBankNucleotideRgdIdGetResponse(RootModel[Optional[Dict[str, str]]]):
    root: Optional[Dict[str, str]] = None


class LookupIdMapGenBankProteinPostResponse(RootModel[Optional[Dict[str, str]]]):
    root: Optional[Dict[str, str]] = None


class LookupIdMapGenBankProteinRgdIdGetResponse(RootModel[Optional[Dict[str, str]]]):
    root: Optional[Dict[str, str]] = None


class LookupIdMapHGNCPostResponse(RootModel[Optional[Dict[str, str]]]):
    root: Optional[Dict[str, str]] = None


class LookupIdMapHGNCRgdIdGetResponse(RootModel[Optional[Dict[str, str]]]):
    root: Optional[Dict[str, str]] = None


class LookupIdMapMGIPostResponse(RootModel[Optional[Dict[str, str]]]):
    root: Optional[Dict[str, str]] = None


class LookupIdMapMGIRgdIdGetResponse(RootModel[Optional[Dict[str, str]]]):
    root: Optional[Dict[str, str]] = None


class LookupIdMapNCBIGenePostResponse(RootModel[Optional[Dict[str, str]]]):
    root: Optional[Dict[str, str]] = None


class LookupIdMapNCBIGeneRgdIdGetResponse(RootModel[Optional[Dict[str, str]]]):
    root: Optional[Dict[str, str]] = None


class LookupIdMapUniProtPostResponse(RootModel[Optional[Dict[str, str]]]):
    root: Optional[Dict[str, str]] = None


class LookupIdMapUniProtRgdIdGetResponse(RootModel[Optional[Dict[str, str]]]):
    root: Optional[Dict[str, str]] = None


class LookupMapsSpeciesTypeKeyGetResponse(RootModel[List[Map]]):
    root: List[Map]


class LookupSpeciesTypeKeysGetResponse(BaseModel):
    pass


class MapsChrMapKeyGetResponse(RootModel[List[str]]):
    root: List[str]


class MapsSpeciesTypeKeyGetResponse(RootModel[List[Map]]):
    root: List[Map]


class OntologyOntAccIdGetResponse(RootModel[Optional[Dict[str, List[str]]]]):
    root: Optional[Dict[str, List[str]]] = None


class PhenotypePhenominerChartSpeciesTypeKeyRefRgdIdTermStringGetResponse(
    RootModel[Optional[Dict[str, Dict[str, Any]]]]
):
    root: Optional[Dict[str, Dict[str, Any]]] = None


class PhenotypePhenominerChartSpeciesTypeKeyTermStringGetResponse(
    RootModel[Optional[Dict[str, Dict[str, Any]]]]
):
    root: Optional[Dict[str, Dict[str, Any]]] = None


class QtlsChrStartStopMapKeyGetResponse(RootModel[List[QTL]]):
    root: List[QTL]


class StatsCountActiveObjectSpeciesTypeKeyDateYYYYMMDDGetResponse(
    RootModel[Optional[Dict[str, str]]]
):
    root: Optional[Dict[str, str]] = None


class StatsCountGeneTypeSpeciesTypeKeyDateYYYYMMDDGetResponse(
    RootModel[Optional[Dict[str, str]]]
):
    root: Optional[Dict[str, str]] = None


class StatsCountObjectStatusSpeciesTypeKeyDateYYYYMMDDGetResponse(
    RootModel[Optional[Dict[str, str]]]
):
    root: Optional[Dict[str, str]] = None


class StatsCountObjectWithRefSeqSpeciesTypeKeyDateYYYYMMDDGetResponse(
    RootModel[Optional[Dict[str, str]]]
):
    root: Optional[Dict[str, str]] = None


class StatsCountObjectWithReferenceSpeciesTypeKeyDateYYYYMMDDGetResponse(
    RootModel[Optional[Dict[str, str]]]
):
    root: Optional[Dict[str, str]] = None


class StatsCountObjectWithXdbSpeciesTypeKeyObjectKeyDateYYYYMMDDGetResponse(
    RootModel[Optional[Dict[str, str]]]
):
    root: Optional[Dict[str, str]] = None


class StatsCountProteinInteractionSpeciesTypeKeyDateYYYYMMDDGetResponse(
    RootModel[Optional[Dict[str, str]]]
):
    root: Optional[Dict[str, str]] = None


class StatsCountQtlInheritanceTypeSpeciesTypeKeyDateYYYYMMDDGetResponse(
    RootModel[Optional[Dict[str, str]]]
):
    root: Optional[Dict[str, str]] = None


class StatsCountRetiredObjectSpeciesTypeKeyDateYYYYMMDDGetResponse(
    RootModel[Optional[Dict[str, str]]]
):
    root: Optional[Dict[str, str]] = None


class StatsCountStrainTypeSpeciesTypeKeyDateYYYYMMDDGetResponse(
    RootModel[Optional[Dict[str, str]]]
):
    root: Optional[Dict[str, str]] = None


class StatsCountWithdrawnObjectSpeciesTypeKeyDateYYYYMMDDGetResponse(
    RootModel[Optional[Dict[str, str]]]
):
    root: Optional[Dict[str, str]] = None


class StatsCountXdbSpeciesTypeKeyDateYYYYMMDDGetResponse(
    RootModel[Optional[Dict[str, str]]]
):
    root: Optional[Dict[str, str]] = None


class StatsDiffActiveObjectSpeciesTypeKeyDateFromYYYYMMDDDateToYYYYMMDDGetResponse(
    RootModel[Optional[Dict[str, str]]]
):
    root: Optional[Dict[str, str]] = None


class StatsDiffGeneTypeSpeciesTypeKeyDateFromYYYYMMDDDateToYYYYMMDDGetResponse(
    RootModel[Optional[Dict[str, str]]]
):
    root: Optional[Dict[str, str]] = None


class StatsDiffObjectStatusSpeciesTypeKeyDateFromYYYYMMDDDateToYYYYMMDDGetResponse(
    RootModel[Optional[Dict[str, str]]]
):
    root: Optional[Dict[str, str]] = None


class StatsDiffObjectWithRefSeqSpeciesTypeKeyDateFromYYYYMMDDDateToYYYYMMDDGetResponse(
    RootModel[Optional[Dict[str, str]]]
):
    root: Optional[Dict[str, str]] = None


class StatsDiffObjectWithReferenceSpeciesTypeKeyDateFromYYYYMMDDDateToYYYYMMDDGetResponse(
    RootModel[Optional[Dict[str, str]]]
):
    root: Optional[Dict[str, str]] = None


class StatsDiffObjectWithXdbSpeciesTypeKeyObjectKeyDateFromYYYYMMDDDateToYYYYMMDDGetResponse(
    RootModel[Optional[Dict[str, str]]]
):
    root: Optional[Dict[str, str]] = None


class StatsDiffProteinInteractionSpeciesTypeKeyDateFromYYYYMMDDDateToYYYYMMDDGetResponse(
    RootModel[Optional[Dict[str, str]]]
):
    root: Optional[Dict[str, str]] = None


class StatsDiffQtlInheritanceTypeSpeciesTypeKeyDateFromYYYYMMDDDateToYYYYMMDDGetResponse(
    RootModel[Optional[Dict[str, str]]]
):
    root: Optional[Dict[str, str]] = None


class StatsDiffRetiredObjectSpeciesTypeKeyDateFromYYYYMMDDDateToYYYYMMDDGetResponse(
    RootModel[Optional[Dict[str, str]]]
):
    root: Optional[Dict[str, str]] = None


class StatsDiffStrainTypeSpeciesTypeKeyDateFromYYYYMMDDDateToYYYYMMDDGetResponse(
    RootModel[Optional[Dict[str, str]]]
):
    root: Optional[Dict[str, str]] = None


class StatsDiffWithdrawnObjectSpeciesTypeKeyDateFromYYYYMMDDDateToYYYYMMDDGetResponse(
    RootModel[Optional[Dict[str, str]]]
):
    root: Optional[Dict[str, str]] = None


class StatsDiffXdbSpeciesTypeKeyDateFromYYYYMMDDDateToYYYYMMDDGetResponse(
    RootModel[Optional[Dict[str, str]]]
):
    root: Optional[Dict[str, str]] = None


class StatsTermAccIdFilterAccIdGetResponse(RootModel[Optional[Dict[str, int]]]):
    root: Optional[Dict[str, int]] = None


class StrainsAllGetResponse(RootModel[List[Strain]]):
    root: List[Strain]


class StrainsChrStartStopMapKeyGetResponse(RootModel[List[Strain]]):
    root: List[Strain]


class MappedQTL(BaseModel):
    chromosome: Optional[str] = None
    mapKey: Optional[int] = None
    qtl: Optional[QTL] = None
    start: Optional[int] = None
    stop: Optional[int] = None
    strand: Optional[str] = None


class MappedSSLP(BaseModel):
    chromosome: Optional[str] = None
    mapKey: Optional[int] = None
    sslp: Optional[SSLP] = None
    start: Optional[int] = None
    stop: Optional[int] = None
    strand: Optional[str] = None


class Pathway(BaseModel):
    description: Optional[str] = None
    hasAlteredPath: Optional[str] = None
    id: Optional[str] = None
    name: Optional[str] = None
    objectList: Optional[List[PathwayObject]] = None
    pathwayCategories: Optional[List[str]] = None
    referenceList: Optional[List[Reference]] = None


class Term(BaseModel):
    accId: Optional[str] = None
    comment: Optional[str] = None
    createdBy: Optional[str] = None
    creationDate: Optional[datetime] = None
    definition: Optional[str] = None
    modificationDate: Optional[datetime] = None
    obsolete: Optional[int] = None
    ontologyId: Optional[str] = None
    term: Optional[str] = None
    xrefs: Optional[List[TermXRef]] = None


class PathwaysDiagramsSearchSearchStringGetResponse(RootModel[List[Pathway]]):
    root: List[Pathway]


class PathwaysDiagramsForCategoryCategoryGetResponse(RootModel[List[Pathway]]):
    root: List[Pathway]


class QtlsMappedChrStartStopMapKeyGetResponse(RootModel[List[MappedQTL]]):
    root: List[MappedQTL]


class SslpsMappedChrStartStopMapKeyGetResponse(RootModel[List[MappedSSLP]]):
    root: List[MappedSSLP]
